# Generated by Django 4.2.13 on 2024-06-01 18:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
                ('image', models.ImageField(null=True, upload_to='category/')),
            ],
        ),
        migrations.CreateModel(
            name='Cooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
                ('base_index', models.DecimalField(decimal_places=10, default=1, max_digits=19)),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='category_for_dish', related_query_name='dishes', to='myapi.category')),
            ],
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('max_gr_per_day', models.IntegerField(default=100)),
                ('supplement', models.BooleanField(default=False)),
                ('category', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='category', related_query_name='products', to='myapi.category')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('multiplier', models.IntegerField(default=1)),
                ('base', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_value', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('nutrition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_type', related_query_name='users_nutrition', to='myapi.nutrition')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit', related_query_name='user_nutritions', to='myapi.unit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_nutr', related_query_name='nutritions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_per_100gr', models.DecimalField(decimal_places=10, max_digits=19)),
                ('nutrition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_for_product', related_query_name='products_with_nutrition', to='myapi.nutrition')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_nutrition', related_query_name='product_nutritions', to='myapi.product')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_type', related_query_name='products_nutritions', to='myapi.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=100)),
                ('date', models.DateTimeField(default=django.db.models.functions.datetime.Now())),
                ('cooked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meal_cooked_by', related_query_name='cooked_meals', to='myapi.cooking')),
                ('dish', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dish_eated', related_query_name='eated_in_meals', to='myapi.dish')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_eated', related_query_name='eated_in_meals', to='myapi.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eater', related_query_name='meals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DishProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=100)),
                ('cooked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dish_cooked_by', related_query_name='cooked_dishes', to='myapi.cooking')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dish_original', related_query_name='dish_products', to='myapi.dish')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_in_dish', related_query_name='in_dishes', to='myapi.product')),
            ],
        ),
        migrations.CreateModel(
            name='CookingNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_index', models.DecimalField(decimal_places=10, default=1, max_digits=19)),
                ('cooking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cooking_type', related_query_name='cooked_nutrition_indexes', to='myapi.cooking')),
                ('nutrition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', related_query_name='cooking_indexes', to='myapi.nutrition')),
            ],
        ),
    ]
